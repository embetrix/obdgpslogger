obdgpslogger:

Break out all obd communications into separate library

Trouble codes?

Optimisations:
 - SQLite insert batching or turn off synchronous or something.
 - Change --enable-optimisations to take a version number or allow
     granular control?
 - ATBRD08 to run at 500k on CAN bus
 - ATCRA/ATCM & ATCF to make sure only engine ecu is replying

Opening an existing database - check that all the columns we're going
  to log are in there, and "ALTER TABLE obd ADD" any that aren't.

Daemon stuff
 - Add pidfile
 - probably need a way to hot-change the device and/or logfile?
  - or configure hotplug to launch obdgpslogger at right moments?
 - Option to just not log stuff at all

DBus stuff
 - Add asynch rpc stuff
  - Like introspection
  - And starting and stopping trips based on dbus events
  - Maybe control what PIDs are being logged [hook into config somehow]


obdsim:

dlopen plugin needs good way to pass seed value to it. Environment variable?

Swich to using read/write, avoid fdopen? [works better with nonblocking]

Change settings so ATE0 changes tcsetattr instead of cheesy write-back-to-device


obd2kml:

Add more graphs? What's useful?

Fix progress reporting while drawing individual graphs

Add timestamps to graphs, so google earth can animate appropraitely.


obdgui:

Real-time graphs as well as the current gauges.

Move GPSD Wizard and Convert Wizard into separate Tabs?

Better shortcuts. Alt-F4/Apple-Q/Ctrl-Q should quit. Probably not escape.


obd2osm:

OpenStreetMap possibilities:

1) Doing stuff the "right" [ish] way
Download multiple .osm segments to encompass the whole area of a trip
 http://www.openstreetmap.org/api/0.5/map?bbox=-0.5,51.3,-0.4,51.4
 bbox params are WEST, SOUTH, EAST, NORTH

Export trip data as a .osm file if can figure out how to render an
overlay using it. Just marking stuff as "road" won't work.

This bit may not be necessary if osmarender lets you have different
rules with different files:
Use Osmosis to combine .osm segments and trip .osm file into single .osm file
 http://wiki.openstreetmap.org/wiki/Osmosis
 osmosis --rx file2.osm --rx file1.osm --m --wx merged.osm

Use osmarender to render .osm file to useful output
 http://wiki.openstreetmap.org/wiki/Osmarender

2) Still working off raw OSM data
Same as #1, but use osmarender to create tiles then draw overlay ourselves
using, eg, imagemagick or libsvg or something.

3) Piggyback someone else for all the hard stuff
Download rendered tiles from openstreetmap directly, overlay our trace
on top of it, using general purpose image editing libraries

Might be a bad idea, since you're mostly borrowing bandwidth from
OSM. On the plus side, it'd be easy.

4) Webby interface: http://openlayers.org/
Perhaps create a web interface flavor output? Should be possible to dump
a simple HTML file that has the data from the logfile, and hotlink to
the javascript data source?

