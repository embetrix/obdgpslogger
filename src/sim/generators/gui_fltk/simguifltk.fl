# data file for the Fltk User Interface Designer (fluid)
version 1.0300 
header_name {.h} 
code_name {.cxx}
decl {\#include "datasource.h"} {public
} 

class SimGenGui_Fltk {open
} {
  Function {SimGenGui_Fltk()} {open
  } {
    Fl_Window w {
      label {OBDII Simulator} open
      xywh {859 58 503 368} type Double visible
    } {
      Fl_Spinner simval_rpm {
        label {Engine RPM}
        xywh {75 17 80 22} labelsize 11 textsize 11
      }
    }
  }
  Function {~SimGenGui_Fltk()} {open
  } {}
  Function {show()} {open
  } {
    code {w->show();} {}
  }
} 

Function {guifltk_simgen_name()} {open return_type {const char *}
} {
  code {return "gui_fltk";} {}
} 

Function {guifltk_simgen_create(void **gen, const char *seed)} {open return_type int
} {
  code {SimGenGui_Fltk *f = new SimGenGui_Fltk();

if(NULL == f) return 1;

f->show();

*gen = static_cast<void *>(f);
return 0;} {}
} 

Function {guifltk_simgen_destroy(void *gen)} {open return_type void
} {
  code {delete static_cast<SimGenGui_Fltk *>(gen);} {}
} 

Function {guifltk_simgen_getvalue(void *gen, unsigned int PID, unsigned int *A, unsigned int *B, unsigned int *C, unsigned int *D)} {open return_type int
} {
  code {SimGenGui_Fltk *f = static_cast<SimGenGui_Fltk *>(gen);
if(NULL == f || 0 == f->w->shown()) {
	return -1;
}

if(0x00 == PID) {
	// We're capable of pulling *anything* out of our collective asses!
	*A = 0xFF;
	*B = 0xFF;
	*C = 0xFF;
	*D = 0xFE;
} else {
	*A = (unsigned int) 0x11;
	*B = (unsigned int) 0x22;
	*C = (unsigned int) 0x33;
	*D = (unsigned int) 0x44;
}
return 4;} {selected
  }
} 

Function {guifltk_simgen_idle(void *gen, int idlems)} {open return_type int
} {
  code {Fl::wait(idlems);
SimGenGui_Fltk *f = static_cast<SimGenGui_Fltk *>(gen);
if(0 == f->w->shown()) {
	return -1;
}
return 0;} {}
} 

decl {\#include "gen_gui_fltk.c"} {} 
