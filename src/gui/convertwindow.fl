# data file for the Fltk User Interface Designer (fluid)
version 1.0109 
header_name {.h} 
code_name {.cxx}
decl {\#include <stdio.h>} {} 

decl {\#include <stdlib.h>} {} 

decl {\#include <string.h>} {} 

decl {\#include "obdgui.h"} {public
} 

decl {\#include "maindisplay.h"} {public
} 

class obdconvertwindow {open
} {
  Function {obdconvertwindow(OBDUI *obdui)} {open
  } {
    code {mConvertType = CONVERT_KML;} {}
    Fl_Window window {
      label {Convert OBD Log...} open
      xywh {1224 247 415 220} type Double
      code0 {o->set_modal();}
      code1 {o->hide();} visible
    } {
      Fl_Group allcontrols {open
        xywh {95 10 310 135}
      } {
        Fl_File_Input logfilename {
          label {Log File}
          xywh {95 10 310 30}
          code0 {o->value(obdui->getLogfilename());}
        }
        Fl_File_Input outputfilename {
          label {Output File}
          xywh {95 45 310 30}
          code0 {o->value("./obdlogger.kml");}
        }
        Fl_Choice convertchoice {
          label {Convert to...} open
          xywh {95 85 310 25} down_box BORDER_BOX
        } {
          MenuItem {} {
            label {Google Earth (.kml)}
            callback {mConvertType = CONVERT_KML;}
            xywh {0 0 100 20}
          }
          MenuItem {} {
            label {CSV (.csv)}
            callback {mConvertType = CONVERT_CSV;}
            xywh {0 0 31 20}
          }
        }
        Fl_Button convertbutton {
          label Convert
          callback {convert();}
          xywh {170 120 105 25}
        }
        Fl_Button donebutton {
          label Done
          callback {window->hide();}
          xywh {285 120 105 25}
        }
      }
      Fl_Progress progressbar {
        label {Conversion Progress}
        xywh {35 160 350 35}
        code0 {o->value(0);}
      }
    }
    code {mMainui = obdui;} {}
  }
  Function {~obdconvertwindow()} {open
  } {}
  decl {OBDUI *mMainui;} {}
  decl {enum obd_convert_type mConvertType;} {}
  Function {show()} {open
  } {
    code {window->show();} {}
  }
  Function {hide()} {open
  } {
    code {window->hide();} {}
  }
  Function {convert()} {open
  } {
    code {FILE *p;
float progresspercentage;
char line[255];
char cmd[1024] = "\\0";

allcontrols->deactivate();

switch(mConvertType) {
  case CONVERT_KML:
    //printf("Converting to KML\\n");
    snprintf(cmd, sizeof(cmd), "obd2kml -p -d %s -o %s",
      mMainui->getLogfilename(), outputfilename->value());
    break;
  case CONVERT_CSV:
    //printf("Converting to CSV\\n");
    snprintf(cmd, sizeof(cmd), "obd2csv -p -d %s -o %s",
      mMainui->getLogfilename(), outputfilename->value());
    break;
  default:
    //printf("Not converting anything\\n");
    break;
}

if(0 < strlen(cmd) && NULL == (p = popen(cmd, "r"))) {
  perror(cmd);
} else {
  while(NULL != fgets(line, sizeof(line), p)) {
    if(0 < sscanf(line, "%f", &progresspercentage)) {
      progressbar->value(progresspercentage);
      Fl::check();
    }
  }
  pclose(p);
}

allcontrols->activate();} {selected
    }
  }
} 
